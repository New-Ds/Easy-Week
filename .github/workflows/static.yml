name: Deploy static content to Pages

on:
  # Workflow срабатывает при пуше в ветку add-doxygen-docs
  push:
    branches:
      - "add-doxygen-docs"  # Используем ветку add-doxygen-docs

  # Позволяет запускать workflow вручную через интерфейс GitHub Actions
  workflow_dispatch:

permissions:
  # Права, необходимые для работы с GitHub Pages
  contents: read    # Чтение содержимого репозитория
  pages: write      # Запись на GitHub Pages
  id-token: write   # Токен для аутентификации

concurrency:
  group: "pages"
  cancel-in-progress: false  # Не отменять текущие деплои, если идет другой

jobs:
  deploy:
    # Параметры среды, где будет развернута документация
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Указание на платформу для выполнения
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Скачиваем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Настройка GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Шаг 3: Установка Doxygen
      - name: Install Doxygen
        run: sudo apt-get install doxygen && doxygen --version

      # Шаг 4: Установка Graphviz (если нужно для графиков в документации)
      - name: Install Graphviz
        run: sudo apt-get install graphviz

      # Шаг 5: Генерация документации с использованием Doxygen
      - name: Create documentation
        run: doxygen Doxyfile  # Предполагаем, что у вас есть файл Doxyfile в корне репозитория

      # Шаг 6: Загружаем сгенерированную документацию как артефакт
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './html/'  # Папка, где Doxygen генерирует документацию

      # Шаг 7: Деплой документации на GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
